//Task 1
/*
    შექმენით ფუნქცია რომელსაც აქვს ერთი პარამეტრი . 
    ფუნქციას გადაეცით ობიექტი არგუმეტნად 
    
    let sampleObject = {
        isItarable : false,
        sampleArray : [12,63,21,34,98,57]
    }
    თუ მიღებული არგუმენტის isItarable მნიშვნელობა არის ჭეშმარიტი მაშინ დალოგეთ თითოეული ელემენტი
    თუ არ არის ჭეშმარიტი გამოიტანეთ წინადადება "provided array isn't itarable"

*/
let sampleObject = {
        isItarable : false,
        sampleArray : [12,63,21,34,98,57]
    };
    function numbers(object) {
        if(object.isItarable == 1) {
            for (i = o; i < object.sampleArray.length; i++)
            console.log(sampleArray[i]); 
        } else if {
            console.log("provided array isn't itarable")
        }
    }
    






//Task 2
/*
    შექმენით ფუნქცია checkPythagoras რომელიც მიიღებს სამ პარამეტრს x,y,z .
    ფუნქციამ უნდა შეამოწმოს თუ აღნიშნული რიცხვების რომელიმე კომბინაცია მაინც
    აკმაყოფილებს პითაგორას თეორემის პირობას a^2 + b^2 = c^2;
    თუ კი ეს პირობა დაკმაყოფილდა ფუნქციამ უნდა დააბრუნოს true 
    წინააღმდეგ შემთხვევაში false
    
*/

//Task 3
/*
    დაწერეთ ფუნქცია minMax რომელიც იღებს 1 მასივის ტიპის პარამეტრს 
    და დააბრუნებს მასივის ელემენტებს შორის მაქსიმალურს და მინიმალურს ელემენტს .
    მაგ : [2,14,25,75,11,6] თუ კი ამ მასივს გადავცემთ არგუმენტის სახით ფუნქციამ უნდა
    დააბრუნოს "Min value is 2 and Max value is 75"
*/
let arr = [2,14,25,75,11,6];

function minMax(numbersArray) {
        let max = 0;
        let min = numbersArray[i];
        for(i = 0; i < numbersArray.length; i++) {
            if(numbersArray[i] > max) {
                max = numbersArray[i]
            }
            if(numbersArray[i] < min) {
                min = numbersArray[i]
            }
        }
    return 'Minimum is' + min + 'Maximum is' + max
}

console.log(minMax(arr))

//Task 4

/*
დაწერეთ ფუნქცია რომელმაც გადაცემული კუთხის მნიშვნელობით უნდა დააბრუნოს
თუ რა ტიპის კუთხეა . 
კუთხის სახეები:
Acute angle: An angle between 0 and 90 degrees.
Right angle: An 90 degree angle.
Obtuse angle: An angle between 90 and 180 degrees.
Straight angle: A 180 degree angle.

*/
function angleCounter(angle) {
    if(angle > 0 && angle < 180) {
        console.log(Acute angle: An angle between 0 and 90 degrees.);
    } else if(angle == 90){
        console.log(Right angle: An 90 degree angle.);
    } else if(angle > 90 && angle < 180) {
        console.log(Obtuse angle: An angle between 90 and 180 degrees.);
    }else if(angle == 180) {
        onsole.log(Straight angle: A 180 degree angle.)
    }
}

//Task 5
/*
    დაწერეთ ფუნქცია checkStudentGrade რომელიც მიიღებს ობიექტების მასივს. 
    მაგალითად [{name: student1; grade : 91}, {name: student2; grade : 71}, {name: student3; grade : 45} ]
    ფუნქციამ სტუდენტის ქულის მიხედვით უნდა განსაზღვროს საფინალო შედეგი finalResult 
    ქვემოთ არსებული ცხრილის მიხედვით და ელემენტის ობიექტში დაამატოს propertyს სახით
    მიღებული მასივი დააბრუნებინეთ ფუნქციას .

    0-50 = F
    51-60 = E
    61-70 = D
    71-80 = C
    81-100 = A

    საორიენტაციოდ შედეგი აღნიშNული მაგალითის მიხედვით უნდა იყოს
    [{name: student1; grade : 91 ; finalResult : 'A'}, {name: student2; grade : 71,finalResult : 'C'}, {name: student3; grade : 45, finalResult : 'F'} ]

*/

let studentsArray = [{name: student1, grade : 91}, {name: student2, grade : 71}, {name: student3, grade : 45} ]
function checkStudentGrade (students) {
        for(i = 0; i < students.length; i++) {
            let grade = students[i].grade; 
            if(grade < 50) {
                students[i].finalResult = 'F'
            } else if (grade > 50 && grade < 60) {
                students{i}.finalResult = 'E'
            } else if(grade > 60 && grade < 70) {
                students[i].finalResult = 'D'
            } else if (grade > 70 && grade < 80) {
                students[i].finalresult = 'C'
            } else if (grade > 80 && grade < 100) {
                students{i}.finalResult = 'A'
            }
        }
    return students;
}
    comnsole.log(checkStudentsGrade(studentsArray))


